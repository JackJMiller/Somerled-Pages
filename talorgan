#!/bin/bash

# Talorgan - A program for creating family encyclopedias
# Copyright (C) 2023-2025 Jack J. Miller
# Licensed under version 3 of the GNU General Public License

PROGRAM_PATH=/home/jack/Development/Talorgan

ListBuilds() {
    echo "Available Builds:"
    ls data/builds | sed 's/\.json$//g'
}

let "EXITCODE = 0"

if [[ $# -eq 2 && "$1" == "init" ]]; then

    if [ ! -z $2 ]; then
        read -p "Enter the name of your first article: " ROOT_NAME
        echo $ROOT_NAME
        mkdir $2
        cd $2
        mkdir data data/builds data/draft_source data/sheet_source data/sources data/wiki_source
        mkdir media sources
        cp $PROGRAM_PATH/resources/silhouette.png media/silhouette.png
        cp $PROGRAM_PATH/resources/quick_references.json data/quick_references.json
        cp $PROGRAM_PATH/resources/full.json data/builds/full.json
        cp $PROGRAM_PATH/resources/config.json config.json
        sed -i "s/ROOT_NAME/${ROOT_NAME}/g" data/builds/full.json
        talorgan new-article $ROOT_NAME
        cd ..
    else
        echo Cannot overwrite $2 already exists
    fi

elif [[ $# -eq 2 && "$1" == "build" ]]; then

    rm -rf build/
    mkdir -p build/media build/res build/sheet build/sources build/wiki
    cp $PROGRAM_PATH/resources/res/* $PROGRAM_PATH/src/client/*.js build/res/
    node $PROGRAM_PATH/main.js $( pwd ) $@

elif [[ $# -eq 2 && "$1" == "new-article" ]]; then

    PAGE_NAME=$2

    if [ -f data/wiki_source/$PAGE_NAME ]; then
        echo Error: page $PAGE_NAME already exists
        exit 1
    fi

    cp $PROGRAM_PATH/resources/wiki_boilerplate data/wiki_source/$PAGE_NAME

    echo Page created: $PAGE_NAME

elif [[ $# -eq 2 && "$1" == "new-sheet" ]]; then

    PAGE_NAME=$2

    if [ -f data/sheet_source/$PAGE_NAME ]; then
        echo Error: page $PAGE_NAME already exists
        exit 1
    fi

    cp $PROGRAM_PATH/resources/sheet_boilerplate data/sheet_source/$PAGE_NAME

    echo Page created: $PAGE_NAME

elif [[ $# -ge 2 && "$1" == "add-media" ]]; then

    for (( i=2; i<=$#; i+=1 ))
    do
        MEDIA_NAME=${!i}

        if [ -f media/$MEDIA_NAME ]; then
            echo Error: media $MEDIA_NAME already exists
            exit 1
        else
            echo $MEDIA_NAME
            cp $MEDIA_NAME media/$MEDIA_NAME
        fi

    done

elif [[ $# -eq 1 && "$1" == "list-builds" ]]; then

    ListBuilds

else

    if [ "$1" != "--help" ]; then
        echo "Invalid parameters"
        echo
    fi

    echo "usage:"
    echo "  talorgan init <project-name>   create a new project"
    echo "  talorgan build [<build-name>]  build the encyclopedia"
    echo "  talorgan new-article <name>    create a new article"
    echo "  talorgan new-sheet <name>      create a new sheet"
    echo "  talorgan add-media <files>     add a file to the media repository"
    echo "  talorgan list-builds           list builds"
    echo "  talorgan --help                display this help page"

fi

exit $EXITCODE
